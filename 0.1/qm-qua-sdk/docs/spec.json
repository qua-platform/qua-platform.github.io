{
  "paths": {
    "/": {
      "get": {
        "description": "Get config",
        "responses": {
          "200": {
            "descriptions": "The config structure",
            "schema": {
              "$ref": "#/definitions/QmConfig"
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Qm Config",
    "version": "0.0.0"
  },
  "swagger": "2.0",
  "definitions": {
    "Octave": {
      "type": "object",
      "properties": {
        "loopbacks": {
          "type": "array",
          "description": "List of loopbacks that connected to this octave, Each loopback is in the form of ((octave_name, octave_port), target_port)",
          "items": {}
        }
      }
    },
    "Oscillator": {
      "type": "object",
      "properties": {
        "intermediate_frequency": {
          "type": "number",
          "x-nullable": true,
          "description": "The frequency of this oscillator [Hz]."
        },
        "lo_frequency": {
          "type": "number",
          "description": "The frequency of the local oscillator which drives the mixer [Hz]."
        },
        "mixer": {
          "type": "string",
          "description": "The mixer used to drive the input of the oscillator, taken from the names in mixers entry in the main configuration"
        }
      }
    },
    "Mixer": {
      "type": "object",
      "properties": {
        "intermediate_frequency": {
          "type": "number",
          "description": "The intermediate frequency associated with the correction matrix"
        },
        "lo_frequency": {
          "type": "number",
          "description": "The LO frequency associated with the correction matrix"
        },
        "correction": {
          "description": "A 2x2 matrix entered as a 4 elements list specifying the correction matrix. Each element is a double in the range of (-2,2)"
        }
      },
      "title": "Mixer",
      "description": "The specification of the correction matrix for an IQ mixer. This is a list of correction matrices for each LO and IF frequencies."
    },
    "IntegrationWeight": {
      "type": "object",
      "properties": {
        "sine": {
          "description": "The integration weights for the sine. Given as a list of tuples, each tuple in the format of: ([double] weight, [int] duration). weight range: [-2048, 2048] in steps of 2**-15. duration is in ns and must be a multiple of 4."
        },
        "cosine": {
          "description": "The integration weights for the cosine. Given as a list of tuples, each tuple in the format of: ([double] weight, [int] duration). weight range: [-2048, 2048] in steps of 2**-15. duration is in ns and must be a multiple of 4."
        }
      },
      "title": "Integration weights",
      "description": "The specification of measurements' integration weights."
    },
    "DigitalWaveForm": {
      "type": "object",
      "properties": {
        "samples": {
          "type": "array",
          "description": "The digital waveform. Given as a list of tuples, each tuple in the format of: ([int] state, [int] duration). state is either 0 or 1 indicating whether the digital output is off or on. duration is in ns. If the duration is 0, it will be played until the reminder of the analog pulse",
          "items": {}
        }
      },
      "title": "Digital waveform",
      "description": "The samples of a digital waveform"
    },
    "DigitalInputPortDef": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "number",
          "description": "The minimum voltage to trigger when a pulse arrives"
        },
        "deadtime": {
          "type": "integer",
          "description": "The minimal time between pulses, in ns."
        },
        "polarity": {
          "type": "string",
          "enum": [
            "RISING",
            "FALLING"
          ],
          "description": "The Detection edge - Whether to trigger in the rising or falling edge of the pulse"
        },
        "connectivity": {
          "description": "Connectivity (for now only for octave), Tuple of: ([str] Octave name, [str] port name)"
        },
        "shareable": {
          "type": "boolean",
          "description": "Whether the port is shareable with other QM instances"
        }
      },
      "title": "Digital input port",
      "description": "The specifications and properties of a digital input port of the controller."
    },
    "AnalogInputPortDef": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "number",
          "description": "DC offset to the input, range: (-0.5, 0.5). Will be applied only when program runs."
        },
        "connectivity": {
          "description": "Connectivity (for now only for octave), Tuple of: ([str] Octave name, [str] port name)"
        },
        "gain_db": {
          "type": "integer",
          "description": "Gain of the pre-ADC amplifier, in dB. Accepts integers in the range: -12 to 20"
        },
        "shareable": {
          "type": "boolean",
          "description": "Whether the port is shareable with other QM instances"
        }
      },
      "title": "Analog input port",
      "description": "The specifications and properties of an analog input port of the controller."
    },
    "AnalogOutputFilterDef": {
      "type": "object",
      "properties": {
        "feedforward": {
          "type": "array",
          "description": "Feedforward taps for the analog output filter, range: [-1,1]. List of double",
          "items": {
            "type": "number"
          }
        },
        "feedback": {
          "type": "array",
          "description": "Feedback taps for the analog output filter, range: (-1,1). List of double",
          "items": {
            "type": "number"
          }
        }
      }
    },
    "AnalogOutputPortDef": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "number",
          "description": "DC offset to the output, range: (-0.5, 0.5). Will be applied while quantum machine is open."
        },
        "filter": {
          "$ref": "#/definitions/AnalogOutputFilterDef"
        },
        "delay": {
          "type": "integer",
          "description": "Output's delay, in units of ns."
        },
        "connectivity": {
          "description": "Connectivity (for now only for octave), Tuple of: ([str] Octave name, [str] port name)"
        },
        "crosstalk": {
          "type": "object",
          "description": "",
          "additionalProperties": {
            "type": "number"
          }
        },
        "shareable": {
          "type": "boolean",
          "description": "Whether the port is shareable with other QM instances"
        }
      },
      "title": "Analog output port",
      "description": "The specifications and properties of an analog output port of the controller."
    },
    "DigitalOutputPortDef": {
      "type": "object",
      "properties": {
        "inverted": {
          "type": "boolean",
          "description": "Whether the port is inverted. If True, the output will be inverted."
        },
        "connectivity": {
          "description": "Connectivity (for now only for octave), Tuple of: ([str] Octave name, [str] port name)"
        },
        "shareable": {
          "type": "boolean",
          "description": "Whether the port is shareable with other QM instances"
        }
      },
      "title": "Digital port",
      "description": "The specifications and properties of a digital output port of the controller."
    },
    "Controller": {
      "type": "object",
      "properties": {
        "digital_inputs": {
          "type": "object",
          "description": "The digital inputs ports and their properties.",
          "additionalProperties": {
            "$ref": "#/definitions/DigitalInputPortDef"
          }
        },
        "analog_inputs": {
          "type": "object",
          "description": "The analog input ports and their properties.",
          "additionalProperties": {
            "$ref": "#/definitions/AnalogInputPortDef"
          }
        },
        "connectivity": {
          "type": "string",
          "description": "Here you can specify the connection of the OPX, for now, you can put here the name of the octave and it will set the default connection between OPX and Octave."
        },
        "type": {
          "default": "opx1"
        },
        "analog_outputs": {
          "type": "object",
          "description": "The analog output ports and their properties.",
          "additionalProperties": {
            "$ref": "#/definitions/AnalogOutputPortDef"
          }
        },
        "digital_outputs": {
          "type": "object",
          "description": "The digital output ports and their properties.",
          "additionalProperties": {
            "$ref": "#/definitions/DigitalOutputPortDef"
          }
        }
      },
      "title": "controller",
      "description": "The specification of a single controller and its properties."
    },
    "HoldOffset": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "description": "The ramp to zero duration, in ns"
        }
      },
      "title": "Hold offset",
      "description": "When defined, makes the element sticky"
    },
    "SingleInputCollection": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "A collection of multiple single inputs to the port",
          "additionalProperties": {
            "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
          }
        }
      },
      "title": "Single input collection",
      "description": "Defines a set of single inputs which can be switched during play statements"
    },
    "MultipleInputs": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "description": "A collection of multiple single inputs to the port",
          "additionalProperties": {
            "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
          }
        }
      },
      "title": "Multiple inputs",
      "description": "Defines a set of single inputs which are all played at once"
    },
    "MixInputOctaveParams": {
      "type": "object",
      "properties": {
        "downconversion_lo_frequency": {
          "type": "number"
        },
        "output_switch_state": {
          "type": "string"
        },
        "output_gain": {
          "type": "integer"
        },
        "rf_output_port": {},
        "downconversion_lo_source": {
          "type": "string"
        },
        "rf_input_port": {},
        "lo_source": {
          "type": "string"
        }
      }
    },
    "MixInput": {
      "type": "object",
      "properties": {
        "I": {
          "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
        },
        "Q": {
          "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
        },
        "lo_frequency": {
          "type": "number",
          "description": "The frequency of the local oscillator which drives the mixer."
        },
        "mixer": {
          "type": "string",
          "description": "The mixer used to drive the input of the element, taken from the names in mixers entry in the main configuration."
        },
        "octave_params": {
          "$ref": "#/definitions/MixInputOctaveParams"
        }
      },
      "title": "Mixer input",
      "description": "The specification of the input of an element which is driven by an IQ mixer"
    },
    "DigitalInput": {
      "type": "object",
      "properties": {
        "port": {
          "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
        },
        "buffer": {
          "type": "integer",
          "description": "Digital pulses played to this element will be convolved with a digital pulse of value 1 with this length [ns]"
        },
        "delay": {
          "type": "integer",
          "description": "The delay to apply to the digital pulses. In ns. An intrinsic negative delay of 136 ns exists by default"
        }
      },
      "title": "Digital input",
      "description": "The specification of the digital input of an element"
    },
    "Sticky": {
      "type": "object",
      "properties": {
        "digital": {
          "type": "boolean",
          "description": "the digital flag must be a True of False"
        },
        "duration": {
          "type": "integer",
          "description": "The ramp to zero duration, in ns"
        },
        "analog": {
          "type": "boolean",
          "description": "the analog flag must be a True of False"
        }
      },
      "title": "Sticky",
      "description": "When defined, makes the element sticky"
    },
    "SingleInput": {
      "type": "object",
      "properties": {
        "port": {
          "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
        }
      },
      "title": "Single input",
      "description": "The specification of the input of an element which has a single input port"
    },
    "Element": {
      "type": "object",
      "properties": {
        "hold_offset": {
          "$ref": "#/definitions/HoldOffset"
        },
        "smearing": {
          "type": "integer",
          "description": "Padding time, in ns, to add to both the start and end of the raw \n            ADC data window during a measure command."
        },
        "outputs": {
          "type": "object",
          "description": "The output ports of the element.",
          "additionalProperties": {
            "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
          }
        },
        "oscillator": {
          "type": "string",
          "x-nullable": true,
          "description": "The oscillator which is used by the controller to modulates the output to this element [Hz]. Can be used to share oscillators between elements"
        },
        "operations": {
          "type": "object",
          "description": "A collection of all pulse names to be used in play and measure commands",
          "additionalProperties": {
            "type": "string",
            "description": "The name of the pulse as it appears under the \"pulses\" entry in the configuration dict"
          }
        },
        "thread": {
          "type": "string",
          "description": "QE thread"
        },
        "intermediate_frequency": {
          "type": "number",
          "x-nullable": true,
          "description": "The frequency at which the controller modulates the output to this element [Hz]."
        },
        "digitalOutputs": {
          "type": "object",
          "additionalProperties": {
            "description": "Controller port to use. Tuple of: ([str] controller name, [int] controller port)"
          }
        },
        "singleInputCollection": {
          "$ref": "#/definitions/SingleInputCollection"
        },
        "time_of_flight": {
          "type": "integer",
          "description": "The delay time, in ns, from the start of pulse until it reaches \n            the controller. Needs to be calibrated by looking at the raw ADC data. \n            Needs to be a multiple of 4 and the minimal value is 24. "
        },
        "outputPulseParameters": {
          "type": "object",
          "description": "Pulse parameters for Time-Tagging"
        },
        "multipleInputs": {
          "$ref": "#/definitions/MultipleInputs"
        },
        "measurement_qe": {
          "type": "string",
          "description": "not implemented"
        },
        "mixInputs": {
          "$ref": "#/definitions/MixInput"
        },
        "digitalInputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DigitalInput"
          }
        },
        "sticky": {
          "$ref": "#/definitions/Sticky"
        },
        "singleInput": {
          "$ref": "#/definitions/SingleInput"
        }
      },
      "title": "Element",
      "description": "The specifications, parameters and connections of a single element."
    },
    "Pulse": {
      "type": "object",
      "properties": {
        "integration_weights": {
          "type": "object",
          "description": "The name of the integration weight to be used in the program.",
          "additionalProperties": {
            "type": "string",
            "description": "The name of the integration weights as it appears under the \"integration_weigths\" entry in the configuration dict."
          }
        },
        "waveforms": {
          "type": "object",
          "description": "The specification of the analog waveform to be played. If the associated element has a single input, then the key is 'single'. If the associated element has 'mixInputs', then the keys are 'I' and 'Q'.",
          "additionalProperties": {
            "type": "string",
            "description": "The name of analog waveform to be played."
          }
        },
        "digital_marker": {
          "type": "string",
          "description": "The name of the digital waveform to be played with this pulse."
        },
        "length": {
          "type": "integer",
          "description": "The length of pulse [ns]. Possible values: 16 to 2^31-1 in steps of 4"
        },
        "operation": {
          "type": "string",
          "description": "The type of operation. Possible values: 'control', 'measurement'"
        }
      },
      "title": "pulse",
      "description": "The specification and properties of a single pulse and to the measurement associated with it."
    },
    "QmConfig": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "description": "Config version."
        },
        "controllers": {
          "type": "object",
          "description": "The controllers. ",
          "additionalProperties": {
            "$ref": "#/definitions/Controller"
          }
        },
        "elements": {
          "type": "object",
          "description": "The elements. Each element represents and\n         describes a controlled entity which is connected to the ports of the \n         controller.",
          "additionalProperties": {
            "$ref": "#/definitions/Element"
          }
        },
        "pulses": {
          "type": "object",
          "description": "The pulses to be played to the elements. ",
          "additionalProperties": {
            "$ref": "#/definitions/Pulse"
          }
        },
        "waveforms": {
          "type": "object",
          "description": "The analog waveforms sent to an element when a pulse is \n        played.",
          "additionalProperties": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/definitions/ArbitraryWaveform"
              },
              {
                "$ref": "#/definitions/ConstantWaveform"
              }
            ]
          }
        },
        "digital_waveforms": {
          "type": "object",
          "description": "The digital waveforms sent to an element when a pulse is \n        played.",
          "additionalProperties": {
            "$ref": "#/definitions/DigitalWaveForm"
          }
        },
        "integration_weights": {
          "type": "object",
          "description": "The integration weight vectors used in the integration \n        and demodulation of data returning from a element.",
          "additionalProperties": {
            "$ref": "#/definitions/IntegrationWeight"
          }
        },
        "oscillators": {
          "type": "object",
          "description": "The oscillators used to drive the elements. \n        Can be used to share oscillators between elements",
          "additionalProperties": {
            "$ref": "#/definitions/Oscillator"
          }
        },
        "mixers": {
          "type": "object",
          "description": "The IQ mixer calibration properties, used to post-shape the pulse\n         to compensate for imperfections in the mixers used for up-converting the \n         analog waveforms.",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Mixer"
            }
          }
        },
        "octaves": {
          "type": "object",
          "description": "The octaves that are in the system, with their interconnected loopbacks.",
          "additionalProperties": {
            "$ref": "#/definitions/Octave"
          }
        }
      },
      "title": "QUA Config",
      "description": "QUA program config root object"
    },
    "ArbitraryWaveform": {
      "type": "object",
      "properties": {
        "samples": {
          "type": "array",
          "description": "list of values of an arbitrary waveforms, range: (-0.5, 0.5)",
          "items": {
            "type": "number"
          }
        },
        "is_overridable": {
          "type": "boolean",
          "description": "Allows overriding the waveform after compilation. Cannot use with the non-default sampling_rate"
        },
        "max_allowed_error": {
          "type": "number",
          "description": "\"Maximum allowed error for automatic compression\""
        },
        "type": {
          "type": "string",
          "description": "\"arbitrary\""
        },
        "sampling_rate": {
          "type": "number",
          "description": "Sampling rate to use in units of S/s (samples per second). Default is 1e9. Cannot be set when is_overridable=True"
        }
      },
      "title": "arbitrary waveform",
      "description": "The modulating envelope of an arbitrary waveform"
    },
    "ConstantWaveform": {
      "type": "object",
      "properties": {
        "sample": {
          "type": "number",
          "description": "Waveform amplitude, range: (-0.5, 0.5)"
        },
        "type": {
          "type": "string",
          "description": "\"constant\""
        }
      },
      "title": "Constant waveform",
      "description": "A waveform with a constant amplitude"
    }
  }
}